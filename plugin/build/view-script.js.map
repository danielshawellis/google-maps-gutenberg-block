{"version":3,"file":"view-script.js","mappings":"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","sources":["webpack://google-maps-gutenberg-block/./src/utilities.ts","webpack://google-maps-gutenberg-block/./node_modules/memoize-one/dist/memoize-one.esm.js","webpack://google-maps-gutenberg-block/webpack/bootstrap","webpack://google-maps-gutenberg-block/webpack/runtime/define property getters","webpack://google-maps-gutenberg-block/webpack/runtime/hasOwnProperty shorthand","webpack://google-maps-gutenberg-block/webpack/runtime/make namespace object","webpack://google-maps-gutenberg-block/./src/view-script.ts"],"sourcesContent":["import memoizeOne from 'memoize-one';\nimport { Loader as GoogleMapsLoader } from \"@googlemaps/js-api-loader\";\nimport { MapSettings } from './types';\n\ninterface MarkersMap extends google.maps.Map {\n  markers?: google.maps.Marker[];\n};\n\nconst constructUrl = (acceptedParameters: (keyof Omit<MapSettings, 'mapmode' | 'height' | 'styles' | 'uivisibility' | 'markervisibility'>)[], atts: Readonly<MapSettings>): string => {\n  const url = new URL(`https://www.google.com/maps/embed/v1/${ atts.mapmode }`);\n  acceptedParameters.forEach(parameter => {\n    const value = atts[parameter];\n    if (value !== '') url.searchParams.append(parameter, typeof value === 'number' ? value.toString() : value);\n  });\n  return url.href;\n};\n\nexport const getMapUrl = (atts: Readonly<MapSettings>): string => {\n  switch (atts.mapmode) {\n    case 'place': return constructUrl(['key', 'q', 'zoom', 'maptype', 'language', 'region'], atts);\n    case 'view': return constructUrl(['key', 'center', 'zoom', 'maptype', 'language', 'region'], atts);\n    case 'directions': return constructUrl(['key', 'origin', 'destination', 'mode', 'units', 'zoom', 'maptype', 'language', 'region'], atts);\n    case 'streetview': return constructUrl(['key', 'location', 'pano', 'heading', 'pitch', 'fov', 'language', 'region'], atts);\n    case 'search': return constructUrl(['key', 'q', 'zoom', 'maptype', 'language', 'region'], atts);\n  };\n};\n\nconst loadScript = (url: string): Promise<HTMLScriptElement> => new Promise((resolve, reject) => {\n  // Create the script element and set its source\n  const script = document.createElement('script');\n  script.async = true;\n  script.setAttribute('src', url);\n\n  // Connect the load and error events to the promise\n  script.onload = () => resolve(script);\n  script.onerror = reject;\n\n  // Load the script into the DOM\n  document.body.appendChild(script);\n});\n\nconst loadMapsScript = memoizeOne(async (apiKey: string, language: string, region: string) => {\n  // Delete the Google Maps object from the window if it exists\n  if (window?.google?.maps) console.warn('The google.maps window property was reset. This is normal in the editor, but it can indicate problems on a published page.');\n\n  // Load the new script into the DOM, deleting out any existing identical scripts\n  const scriptUrl = `https://maps.googleapis.com/maps/api/js?key=${apiKey}${language ? '&language=' + language : ''}${region ? '&region=' + region : ''}`;\n  await loadScript(scriptUrl);\n});  \n\nexport const getMapObject = memoizeOne(async (apiKey: string, element: HTMLElement, language: string, region: string) => {\n  // If a new script is needed, load it\n  await loadMapsScript(apiKey, language, region);\n\n  // Use the newly loaded script to create a map object\n  return new window.google.maps.Map(element);\n});\n\nexport const initializeMap = (map: MarkersMap, atts: Readonly<MapSettings>) => {\n  // Define the position of the center of the map\n  const center = { lat: parseFloat(atts.center.split(',')[0]), lng: parseFloat(atts.center.split(',')[1]) };\n\n  // Set the base options and styles\n  map.setOptions({\n    center,\n    zoom: atts.zoom,\n    mapTypeId: atts.themedmaptype,\n    disableDefaultUI: !atts.uivisibility,\n    styles: JSON.parse(atts.styles)\n  });\n\n  // Remove any existing markers\n  if (Array.isArray(map.markers)) {\n    map.markers.forEach(marker => marker.setMap(null));\n    map.markers = undefined;\n  }\n\n  // Add a new marker to the center of the map if necessary\n  if (atts.markervisibility) {\n    const marker = new google.maps.Marker({ \n      position: center, \n      map,\n    });\n    map.markers = [ ...(map.markers ?? []), marker ];\n  };\n};","var safeIsNaN = Number.isNaN ||\n    function ponyfill(value) {\n        return typeof value === 'number' && value !== value;\n    };\nfunction isEqual(first, second) {\n    if (first === second) {\n        return true;\n    }\n    if (safeIsNaN(first) && safeIsNaN(second)) {\n        return true;\n    }\n    return false;\n}\nfunction areInputsEqual(newInputs, lastInputs) {\n    if (newInputs.length !== lastInputs.length) {\n        return false;\n    }\n    for (var i = 0; i < newInputs.length; i++) {\n        if (!isEqual(newInputs[i], lastInputs[i])) {\n            return false;\n        }\n    }\n    return true;\n}\n\nfunction memoizeOne(resultFn, isEqual) {\n    if (isEqual === void 0) { isEqual = areInputsEqual; }\n    var cache = null;\n    function memoized() {\n        var newArgs = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            newArgs[_i] = arguments[_i];\n        }\n        if (cache && cache.lastThis === this && isEqual(newArgs, cache.lastArgs)) {\n            return cache.lastResult;\n        }\n        var lastResult = resultFn.apply(this, newArgs);\n        cache = {\n            lastResult: lastResult,\n            lastArgs: newArgs,\n            lastThis: this,\n        };\n        return lastResult;\n    }\n    memoized.clear = function clear() {\n        cache = null;\n    };\n    return memoized;\n}\n\nexport { memoizeOne as default };\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define getter functions for harmony exports\n__webpack_require__.d = function(exports, definition) {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }","// define __esModule on exports\n__webpack_require__.r = function(exports) {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","import { getMapObject, initializeMap } from \"./utilities\";\nimport { MapSettings } from './types';\n\nwindow.addEventListener('DOMContentLoaded', () => {\n  document.querySelectorAll('div.google-maps-gutenberg-block').forEach((element) => {\n    const attributes = JSON.parse((element as HTMLDivElement).dataset.attributes) as MapSettings;\n    getMapObject(attributes.key, element as HTMLDivElement, attributes.language, attributes.region).then(map => initializeMap(map, attributes));\n  })\n});"],"names":["memoizeOne","constructUrl","acceptedParameters","atts","url","URL","mapmode","forEach","parameter","value","searchParams","append","toString","href","getMapUrl","loadScript","Promise","resolve","reject","script","document","createElement","async","setAttribute","onload","onerror","body","appendChild","loadMapsScript","apiKey","language","region","window","google","maps","console","warn","scriptUrl","getMapObject","element","Map","initializeMap","map","center","lat","parseFloat","split","lng","setOptions","zoom","mapTypeId","themedmaptype","disableDefaultUI","uivisibility","styles","JSON","parse","Array","isArray","markers","marker","setMap","undefined","markervisibility","Marker","position","addEventListener","querySelectorAll","attributes","dataset","key","then"],"sourceRoot":""}